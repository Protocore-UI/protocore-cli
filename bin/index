#!/usr/bin/env node

var os = require('os'),
	fs = require('fs'),
	path = require('path'),
	readline = require('readline');

var program = require('commander'),
	fse = require('fs-extra');

var product = require('../package.json');

program
	.version(product.version)
	.usage('[options] [dir]')
	.option('-a, --about', 'About Protocore-Cli ' + product.version)
	.parse(process.argv);

main();

/**
 * Check if the given directory `path` is empty.
 *
 * @param {String} path
 * @param {Function} fn
 */
function isDirectoryEmpty(path, fn) {
	fs.readdir(path, function(err, files) {
		if (err) {
			throw err;
		}
		fn(!files || !files.length);
	});
};

/**
 * Get the confirmation for user input.
 *
 * @param {String} message
 * @param {Function} callback
 */
function confirm(message, callback) {
	var rl = readline.createInterface({
		input: process.stdin,
		output: process.stdout
	});

	rl.question(message, function(input) {
		rl.close();
		callback(/^y|Y|yes|ok|true$/i.test(input))
	});
}

function generateScaffolding(appName, scaffoldingPath) {
	fse.copy('templates/', scaffoldingPath, function(err) {
		if (err) {
			return console.error(err);
		}
		console.log("\nCreated %s\n", scaffoldingPath);
	})
};

function main() {
	var scaffoldingPath = program.args.shift() || '.';
	var appName = path.basename(path.resolve(scaffoldingPath));

	isDirectoryEmpty(scaffoldingPath, function(isEmpty) {
		if (isEmpty) {
			generateScaffolding(appName, scaffoldingPath);
		} else {
			console.log("\nWarning: Oh, scaffolding path is not empty!");
			confirm("Are you sure you want to continue? [Y/N] ", function(isYes) {
				if (isYes) {
					process.stdin.destroy();
					generateScaffolding(appName, scaffoldingPath);
				} else {
					console.log("\nCanâ€™t figure this out! aborting...\n");
					process.exit(1);
				}
			});
		}
	});
};